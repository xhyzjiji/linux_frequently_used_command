set nu
syntax on
set showcmd
set autoindent
set smartindent
set ts=4
set shiftwidth=4
set history=1000
set showmatch "高亮匹配的括号
set stal=2
set tags=Ctags_files/usr_include_tags/usr_inc_tags
set cursorline

"if version >= 603
"    set helplang=cn
"endif

"新建.c,.h,.sh,.java文件，自动插入文件头
"autocmd BufNewFile *.cpp,*.c,*.h,*.C,*.hpp,*.sh,*.java exec ":call SetTitle() 
"定义函数SetTitle，自动插入文件头 
function SetTitle() 
    "如果文件类型为.sh文件 
    if &filetype == 'sh' 
        call setline(1,"\#########################################################################") 
        call append(line("."), "\# File Name: ".expand("%")) 
        call append(line(".")+1, "\# Author: pyf") 
        call append(line(".")+2, "\# mail: xhyzjiji@126.com") 
        call append(line(".")+3, "\# Created Time: ".strftime("%c")) 
        call append(line(".")+4, "\#########################################################################") 
        call append(line(".")+5, "\#!/bin/bash") 
        call append(line(".")+6, "") 
    else 
        call setline(1, "/*************************************************************************") 
        call append(line("."), "    > File Name: ".expand("%")) 
        call append(line(".")+1, "    > Author: pyf") 
        call append(line(".")+2, "    > Mail: xhyzjiji@126.com ") 
        call append(line(".")+3, "    > Created Time: ".strftime("%c")) 
        call append(line(".")+4, " ************************************************************************/") 
        call append(line(".")+5, "")
    endif
    if &filetype == 'cpp'
        call append(line(".")+6, "#include<iostream>")
        call append(line(".")+7, "using namespace std;")
        call append(line(".")+8, "")
    endif
    if &filetype == 'c'
        call append(line(".")+6, "#include<stdio.h>")
	call append(line(".")+7, "#include<stdlib.h>")
	call append(line(".")+8, "#include<string.h>")
        call append(line(".")+9, "")
    endif
    "新建文件后，自动定位到文件末尾
    autocmd BufNewFile * normal G
endfunction

if has("autocmd")
    autocmd BufNewFile *.cpp,*.c,*.h,*.C,*.hpp,*.sh,*.java exec ":call SetTitle()" 
endif

"加入快捷键映射
"map <C-A> ggVGY
"map !<C-A> <Esc>ggVGY
"map <F12> gg=G
"map <C-c> "+y Ctrl+c
"map <F5> :call CompileRunGcc()<CR> "按F5编译运行
"C,C++编译运行函数
"func! CompileRunGcc()
"    exec "w"
"    if &filetype == 'c'
"        exec "!g++ % -o %<"
"        exec "! ./%<"
"    elseif &filetype == 'cpp'
"        exec "!g++ % -o %<"
"        exec "! ./%<"
"    elseif &filetype == 'java' 
"        exec "!javac %" 
"        exec "!java %<"
"    elseif &filetype == 'sh'
"        :!./%
"    endif
"endfunc

"C,C++调试函数
"map <F8> :call Rungdb()<CR>
"func! Rungdb()
"    exec "w"
"    exec "!g++ % -g -o %<"
"    exec "!gdb ./%<"
"endfunc

set autoread "文件被修改后自动载入

""CTags Setting
"let Tlist_Sort_Type = "name"    " 按照名称排序  
"let Tlist_Use_Right_Window = 1  " 在右侧显示窗口  
"let Tlist_Compart_Format = 1    " 压缩方式  
"let Tlist_Exist_OnlyWindow = 1  " 如果只有一个buffer，kill窗口也kill掉buffer  
"let Tlist_File_Fold_Auto_Close = 0  " 不要关闭其他文件的tags  
"let Tlist_Enable_Fold_Column = 0    " 不要显示折叠树  
"autocmd FileType java set tags+=D:\tools\java\tags  
""autocmd FileType h,cpp,cc,c set tags+=D:\tools\cpp\tags  
""let Tlist_Show_One_File=1            "不同时显示多个文件的tag，只显示当前文件的
""设置tags  
"set tags=tags  
""set autochdir 

